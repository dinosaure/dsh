OASISFormat:             0.4
Name:                    dsh
Version:                 0.1
Synopsis:                Typed Scheme
Authors:                 Romain Calascibetta
License:                 MIT
Plugins:                 META (0.4), DevFiles (0.4)
BuildTools:              ocamlbuild
AlphaFeatures:           ocamlbuild_more_args

Library dsh
  Path:                  src
  Modules:               Location, Lexer, Parser, Pattern, Ast, Type, Gamma,
                         Synthesis, Core, Interpreter
  BuildDepends:          batteries

Document "dsh"
  Type:                  ocamlbuild (0.4)
  BuildTools:            ocamldoc
  Title:                 "dsh"
  PostCommand:           cp dsh.docdir/*.html doc/
  XOCamlbuildPath:       src
  XOCamlbuildLibraries:  dsh
  XOCamlbuildExtraArgs:
    "-docflags '-colorize-code -keep-code -charset utf-8'"

Executable dsh
  Path:                  bin
  MainIs:                dsh.ml
  BuildDepends:          dsh

## Test ##

Executable test_parser
  Path:                  test
  Build$:                flag(tests)
  Install:               false
  CompiledObject:        best
  MainIs:                parser_test.ml
  BuildDepends:          dsh, oUnit

Test test_parser
  Run$:                  flag(tests)
  TestTools:             test_parser
  Command:               $test_parser
  WorkingDirectory:      .

Executable test_lexer
  Path:                  test
  Build$:                flag(tests)
  Install:               false
  CompiledObject:        best
  MainIs:                lexer_test.ml
  BuildDepends:          dsh, oUnit

Test test_lexer
  Run$:                  flag(tests)
  TestTools:             test_lexer
  Command:               $test_lexer
  WorkingDirectory:      .

Executable test_type
  Path:                  test
  Build$:                flag(tests)
  Install:               false
  CompiledObject:        best
  MainIs:                type_test.ml
  BuildDepends:          dsh, oUnit

Test test_type
  Run$:                  flag(tests)
  TestTools:             test_type
  Command:               $test_type
  WorkingDirectory:      .

Executable test_alias
  Path:                  test
  Build$:                flag(tests)
  Install:               false
  CompiledObject:        best
  MainIs:                alias_test.ml
  BuildDepends:          dsh, oUnit

Test test_alias
  Run$:                  flag(tests)
  TestTools:             test_alias
  Command:               $test_alias
  WorkingDirectory:      .
